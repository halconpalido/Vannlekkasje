{"ast":null,"code":"var _jsxFileName = \"/Users/sveinungkarlsen/repos/Vannlekkasje/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\nfunction Calculator() {\n  _s();\n  const [area, setArea] = useState(0);\n  const [costPerCubicMeter, setCostPerCubicMeter] = useState(0.5); // Default value\n\n  const volumePerSecond = calculateVolumePerSecond(area);\n  const volumePerMinute = area; // Assuming area is volume per minute for simplicity\n  const volumePerHour = area / 1000 * 60;\n  const volumePerDay = volumePerHour * 24;\n  const volumePerAnnum = volumePerDay * 365;\n  const annualCost = volumePerAnnum * costPerCubicMeter;\n  function calculateVolumePerSecond(area) {\n    return area / 60;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vannlekkasje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculation-area\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"areal-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Lekkasjens Areal (mm\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 42\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: area,\n            onChange: e => setArea(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"utregning\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Lekkasjens utstr\\xF8msvolum ved vanntrykk 0,5 MPa (5 kp/cm\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 72\n        }, this), \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"liter/sek: \", volumePerSecond.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"liter/min: \", volumePerMinute]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), \"/time: \", volumePerHour.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), \"/d\\xF8gn: \", volumePerDay.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), \"/\\xE5r: \", volumePerAnnum.toFixed(0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"annum-cost\",\n        children: \"\\xC5rskostnad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"pris-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Kroner per m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 35\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: costPerCubicMeter,\n            onChange: e => setCostPerCubicMeter(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [annualCost.toFixed(0), \" kr\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Av Sveinung Karlsen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(Calculator, \"ct7mzuwP7gudD03YhdxC6r6JXD0=\");\n_c2 = Calculator;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","className","children","Calculator","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","area","setArea","costPerCubicMeter","setCostPerCubicMeter","volumePerSecond","calculateVolumePerSecond","volumePerMinute","volumePerHour","volumePerDay","volumePerAnnum","annualCost","id","type","value","onChange","e","target","toFixed","_c2","$RefreshReg$"],"sources":["/Users/sveinungkarlsen/repos/Vannlekkasje/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Calculator />\n      </div>\n  );\n}\n\n\nfunction Calculator() {\n  const [area, setArea] = useState(0);\n  const [costPerCubicMeter, setCostPerCubicMeter] = useState(0.5); // Default value\n\n  const volumePerSecond = calculateVolumePerSecond(area);\n  const volumePerMinute = area; // Assuming area is volume per minute for simplicity\n  const volumePerHour = (area / 1000) * 60;\n  const volumePerDay = volumePerHour * 24;\n  const volumePerAnnum = volumePerDay * 365;\n  const annualCost = volumePerAnnum * costPerCubicMeter;\n\n  function calculateVolumePerSecond(area) {\n      return area / 60;\n  }\n\n  return (\n      <div className='container'>\n          <h1>Vannlekkasje</h1>\n          <div className='calculation-area'>\n              <label id='areal-label'>\n                <div>Lekkasjens Areal (mm<sup>2</sup>)</div>\n                <div>\n                  <input type=\"number\" value={area} onChange={e => setArea(e.target.value)} />\n                </div>\n              </label>\n              \n          </div>\n          <div className=\"utregning\">\n            <h3>Lekkasjens utstrømsvolum ved vanntrykk 0,5 MPa (5 kp/cm<sup>2</sup>):</h3>\n              {/* Display Calculations */}\n              <p>liter/sek: {volumePerSecond.toFixed(2)}</p>\n              <p>liter/min: {volumePerMinute}</p>\n              <p>m<sup>3</sup>/time: {volumePerHour.toFixed(2)}</p>\n              <p>m<sup>3</sup>/døgn: {volumePerDay.toFixed(2)}</p>\n              <p>m<sup>3</sup>/år: {volumePerAnnum.toFixed(0)}</p>\n              <h3 id='annum-cost'>Årskostnad</h3>\n              <label id='pris-label'>\n                  <div>\n                      Kroner per m<sup>3</sup>:\n                  </div>\n                  <div>\n                      <input type=\"number\" value={costPerCubicMeter} onChange={e => setCostPerCubicMeter(e.target.value)} />\n                  </div>             \n              </label>\n              <p>{annualCost.toFixed(0)} kr</p>\n          </div>\n          <div className='footer'>\n            <p>Av Sveinung Karlsen</p>\n          </div>\n      </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}